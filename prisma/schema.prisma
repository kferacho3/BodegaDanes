generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AvailabilityStatus {
  OPEN // blue
  OFF // grey
  BOOKED // red
}

enum UserRole {
  ADMIN
  CUSTOMER
}

/**
 * ──────────────────────────────────── MODELS ───────────────────────────────────
 */

/**
 * Availability slots for the booking calendar
 */
model Availability {
  id        Int                @id @default(autoincrement())
  date      DateTime           @unique
  status    AvailabilityStatus @default(OPEN)
  services  Json?
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
}

/**
 * Customer bookings (future and past)
 */
model Booking {
  id               Int      @id @default(autoincrement())
  date             DateTime
  serviceId        String
  confirmationCode String   @unique
  customerId       String?
  customerEmail    String?
  stripeId         String?  @unique
  meta             Json?
  createdAt        DateTime @default(now())

  /**
   * back‑relation to Stripe receipts
   */
  receipts Receipt[]
}

/**
 * Support / inquiry messages
 */
model Message {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  subject   String?
  body      String
  replied   Boolean  @default(false)
  createdAt DateTime @default(now())

  /**
   * optional link to registered user
   */
  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

/**
 * Financial receipts pulled from Stripe
 */
model Receipt {
  id        Int      @id @default(autoincrement())
  booking   Booking  @relation(fields: [bookingId], references: [id])
  bookingId Int
  stripeId  String   @unique
  amount    Int
  currency  String   @default("usd")
  createdAt DateTime @default(now())
}

/**
 * Site users (admins + customers)
 */
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      UserRole @default(CUSTOMER)
  firstName String?
  lastName  String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  /**
   * back‑relation to messages
   */
  messages Message[]
}
